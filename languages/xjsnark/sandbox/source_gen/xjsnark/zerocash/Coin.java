package xjsnark.zerocash;

/*Generated by MPS */

import backend.auxTypes.StructDefinition;
import backend.auxTypes.UnsignedInteger;
import java.math.BigInteger;
import backend.structure.CircuitGenerator;
import java.util.ArrayList;
import backend.auxTypes.VariableState;
import backend.auxTypes.IAuxType;

public class Coin extends StructDefinition {


  /*package*/ UnsignedInteger value = new UnsignedInteger(64, new BigInteger("0"));
  /*package*/ UnsignedInteger[] rho = (UnsignedInteger[]) UnsignedInteger.createZeroArray(CircuitGenerator.__getActiveCircuitGenerator(), new int[]{8}, 32);
  /*package*/ UnsignedInteger[] rand = (UnsignedInteger[]) UnsignedInteger.createZeroArray(CircuitGenerator.__getActiveCircuitGenerator(), new int[]{12}, 32);
  /*package*/ PublicKey pubKey = new PublicKey();


  public void __makeInput() {

    value = UnsignedInteger.createInput(CircuitGenerator.__getActiveCircuitGenerator(), 64);
    rho = UnsignedInteger.createInputArray(CircuitGenerator.__getActiveCircuitGenerator(), rho.length, 32);
    rand = UnsignedInteger.createInputArray(CircuitGenerator.__getActiveCircuitGenerator(), rand.length, 32);




    if (pubKey != null) {
      pubKey.__makeInput();
    }






  }


  public void __makeOutput() {
    UnsignedInteger.makeOutput(CircuitGenerator.__getActiveCircuitGenerator(), value);
    UnsignedInteger.makeOutput(CircuitGenerator.__getActiveCircuitGenerator(), rho);
    UnsignedInteger.makeOutput(CircuitGenerator.__getActiveCircuitGenerator(), rand);




    if (pubKey != null) {
      pubKey.__makeOutput();
    }

  }


  public void __makeWitness() {


    value = UnsignedInteger.createWitness(CircuitGenerator.__getActiveCircuitGenerator(), 64);
    rho = UnsignedInteger.createWitnessArray(CircuitGenerator.__getActiveCircuitGenerator(), rho.length, 32);
    rand = UnsignedInteger.createWitnessArray(CircuitGenerator.__getActiveCircuitGenerator(), rand.length, 32);




    if (pubKey != null) {
      pubKey.__makeWitness();
    }






  }


  public void __makeVerifiedWitness() {

    value = UnsignedInteger.createVerifiedWitness(CircuitGenerator.__getActiveCircuitGenerator(), 64);
    rho = UnsignedInteger.createVerifiedWitnessArray(CircuitGenerator.__getActiveCircuitGenerator(), rho.length, 32);
    rand = UnsignedInteger.createVerifiedWitnessArray(CircuitGenerator.__getActiveCircuitGenerator(), rand.length, 32);




    if (pubKey != null) {
      pubKey.__makeVerifiedWitness();
    }







  }

  public void __alignAndPackAll() {

    ArrayList<VariableState> states = new ArrayList();
    states.add(value.getState());

    for (int i = 0; i < rho.length; i++) {
      states.add(rho[i].getState());
    }
    for (int i = 0; i < rand.length; i++) {
      states.add(rand[i].getState());
    }


    if (pubKey != null) {
      pubKey.__alignAndPackAll();
    }




    for (VariableState state : states) {
      state.setPackedAhead(true);
      state.setMustBeWithinRange(true);
      state.setConditionallySplittedAndAlignedAhead(true);
    }

  }
  public static Class<?> __getClassRef() {
    return Coin.class;
  }

  public StructDefinition __copy() {
    return null;
  }
  public int[] __getBasicElementsDetails() {
    return null;
  }
  public ArrayList<IAuxType> __getBasicElements() {
    ArrayList<IAuxType> list = new ArrayList();
    list.add(value);

    for (int i = 0; i < rho.length; i++) {
      list.add(rho[i]);
    }
    for (int i = 0; i < rand.length; i++) {
      list.add(rand[i]);
    }


    if (pubKey != null) {
      list.addAll(pubKey.__getBasicElements());
    }




    return list;
  }
}
